// <auto-generated />
using System;
using DrVendas.dddcore.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DrVendas.dddcore.Infra.Data.Migrations
{
    [DbContext(typeof(ContextEFSQLServer))]
    [Migration("20190110155128_CriadoObeservacaoEValorTotalPedidoNaTabPedido")]
    partial class CriadoObeservacaoEValorTotalPedidoNaTabPedido
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Apelido")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Apelido")
                        .IsUnique();

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PedidoId");

                    b.Property<int>("ProdutoId");

                    b.Property<int>("Qtd");

                    b.Property<decimal>("ValorItem")
                        .HasColumnType("decimal");

                    b.Property<decimal>("ValorTotalItem")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemPedido");
                });

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("DateTime");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(4000)");

                    b.Property<decimal>("ValorTotalPedido")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("FornecedorId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.Cliente", b =>
                {
                    b.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.CpfCnpjVO", "CPFCNPJ", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnName("CpfCnpj")
                                .HasColumnType("varchar(14)");

                            b1.HasIndex("Numero")
                                .IsUnique();

                            b1.ToTable("Cliente");

                            b1.HasOne("DrVendas.dddcore.Domain.Entidades.Cliente")
                                .WithOne("CPFCNPJ")
                                .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.CpfCnpjVO", "ClienteId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.EmailVO", "Email", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(100)");

                            b1.ToTable("Cliente");

                            b1.HasOne("DrVendas.dddcore.Domain.Entidades.Cliente")
                                .WithOne("Email")
                                .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.EmailVO", "ClienteId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.EnderecoVO", "Endereco", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bairro")
                                .HasColumnName("Bairro")
                                .HasColumnType("varchar(30)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnName("Cidade")
                                .HasColumnType("varchar(30)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnName("Endereco")
                                .HasColumnType("varchar(100)");

                            b1.ToTable("Cliente");

                            b1.HasOne("DrVendas.dddcore.Domain.Entidades.Cliente")
                                .WithOne("Endereco")
                                .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.EnderecoVO", "ClienteId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.CepVO", "CEP", b2 =>
                                {
                                    b2.Property<int>("EnderecoVOClienteId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Codigo")
                                        .HasColumnName("CEP")
                                        .HasColumnType("varchar(8)");

                                    b2.ToTable("Cliente");

                                    b2.HasOne("DrVendas.dddcore.Domain.Shared.ValueObjects.EnderecoVO")
                                        .WithOne("CEP")
                                        .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.CepVO", "EnderecoVOClienteId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });

                            b1.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.UfVO", "UF", b2 =>
                                {
                                    b2.Property<int>("EnderecoVOClienteId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("UF")
                                        .HasColumnName("UF")
                                        .HasColumnType("varchar(2)");

                                    b2.ToTable("Cliente");

                                    b2.HasOne("DrVendas.dddcore.Domain.Shared.ValueObjects.EnderecoVO")
                                        .WithOne("UF")
                                        .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.UfVO", "EnderecoVOClienteId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.Fornecedor", b =>
                {
                    b.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.CpfCnpjVO", "CPFCNPJ", b1 =>
                        {
                            b1.Property<int>("FornecedorId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnName("CpfCnpj")
                                .HasColumnType("varchar(14)");

                            b1.HasIndex("Numero")
                                .IsUnique();

                            b1.ToTable("Fornecedor");

                            b1.HasOne("DrVendas.dddcore.Domain.Entidades.Fornecedor")
                                .WithOne("CPFCNPJ")
                                .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.CpfCnpjVO", "FornecedorId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.EmailVO", "Email", b1 =>
                        {
                            b1.Property<int>("FornecedorId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(100)");

                            b1.ToTable("Fornecedor");

                            b1.HasOne("DrVendas.dddcore.Domain.Entidades.Fornecedor")
                                .WithOne("Email")
                                .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.EmailVO", "FornecedorId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.EnderecoVO", "Endereco", b1 =>
                        {
                            b1.Property<int>("FornecedorId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bairro")
                                .HasColumnName("Bairro")
                                .HasColumnType("varchar(30)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnName("Cidade")
                                .HasColumnType("varchar(30)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnName("Endereco")
                                .HasColumnType("varchar(100)");

                            b1.ToTable("Fornecedor");

                            b1.HasOne("DrVendas.dddcore.Domain.Entidades.Fornecedor")
                                .WithOne("Endereco")
                                .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.EnderecoVO", "FornecedorId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.CepVO", "CEP", b2 =>
                                {
                                    b2.Property<int>("EnderecoVOFornecedorId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Codigo")
                                        .HasColumnName("CEP")
                                        .HasColumnType("varchar(8)");

                                    b2.ToTable("Fornecedor");

                                    b2.HasOne("DrVendas.dddcore.Domain.Shared.ValueObjects.EnderecoVO")
                                        .WithOne("CEP")
                                        .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.CepVO", "EnderecoVOFornecedorId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });

                            b1.OwnsOne("DrVendas.dddcore.Domain.Shared.ValueObjects.UfVO", "UF", b2 =>
                                {
                                    b2.Property<int>("EnderecoVOFornecedorId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("UF")
                                        .HasColumnName("UF")
                                        .HasColumnType("varchar(2)");

                                    b2.ToTable("Fornecedor");

                                    b2.HasOne("DrVendas.dddcore.Domain.Shared.ValueObjects.EnderecoVO")
                                        .WithOne("UF")
                                        .HasForeignKey("DrVendas.dddcore.Domain.Shared.ValueObjects.UfVO", "EnderecoVOFornecedorId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.ItemPedido", b =>
                {
                    b.HasOne("DrVendas.dddcore.Domain.Entidades.Pedido", "Pedido")
                        .WithMany("ItensPedidos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DrVendas.dddcore.Domain.Entidades.Produto", "Produto")
                        .WithMany("ItensPedidos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.Pedido", b =>
                {
                    b.HasOne("DrVendas.dddcore.Domain.Entidades.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DrVendas.dddcore.Domain.Entidades.Produto", b =>
                {
                    b.HasOne("DrVendas.dddcore.Domain.Entidades.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
